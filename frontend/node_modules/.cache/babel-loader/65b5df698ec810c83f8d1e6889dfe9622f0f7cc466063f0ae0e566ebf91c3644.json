{"ast":null,"code":"var _jsxFileName = \"D:\\\\web Dev\\\\REACT 2024\\\\15 React_Router_v6\\\\frontend\\\\src\\\\pages\\\\RootLayout.js\";\nimport { Outlet, useNavigation } from \"react-router-dom\";\nimport MainNavigation from \"../components/MainNavigation\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function RootLayout() {\n  /*\r\n    useNavigation lets us find out whether our page, currently in an active transition,\r\n    or loading data, or if we have no active transition going on.\r\n  \r\n    NOTE:\r\n  export function RootLayout() {\r\n    const navigation = useNavigation()\r\n    const  navigationState = navigation.state\r\n    return (\r\n      <>\r\n        <MainNavigation />\r\n        <main className=\"p-10 text-3xl font-bold tracking-wide\">\r\n        {navigationState === 'loading' && <p className=\"bg-stone-900 py-5 text-center rounded font-thin mb-10\">Please wait a moment, fetching data</p>}\r\n          <Outlet />\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n    \r\n    Our message is displayed but route does not change, i.e until the data is fetched, URL remained http://localhost:3000,\r\n    once the data is fetched message is loading message is removed and we navigate to the desired route\r\n  */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"p-10 text-3xl font-bold tracking-wide\",\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = RootLayout;\nvar _c;\n$RefreshReg$(_c, \"RootLayout\");","map":{"version":3,"names":["Outlet","useNavigation","MainNavigation","jsxDEV","_jsxDEV","Fragment","_Fragment","RootLayout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/web Dev/REACT 2024/15 React_Router_v6/frontend/src/pages/RootLayout.js"],"sourcesContent":["import { Outlet, useNavigation } from \"react-router-dom\";\r\nimport MainNavigation from \"../components/MainNavigation\";\r\n\r\nexport function RootLayout() {\r\n/*\r\n  useNavigation lets us find out whether our page, currently in an active transition,\r\n  or loading data, or if we have no active transition going on.\r\n\r\n  NOTE:\r\nexport function RootLayout() {\r\n  const navigation = useNavigation()\r\n  const  navigationState = navigation.state\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className=\"p-10 text-3xl font-bold tracking-wide\">\r\n      {navigationState === 'loading' && <p className=\"bg-stone-900 py-5 text-center rounded font-thin mb-10\">Please wait a moment, fetching data</p>}\r\n        <Outlet />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n  \r\n  Our message is displayed but route does not change, i.e until the data is fetched, URL remained http://localhost:3000,\r\n  once the data is fetched message is loading message is removed and we navigate to the desired route\r\n*/\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className=\"p-10 text-3xl font-bold tracking-wide\">\r\n        <Outlet />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,aAAa,QAAQ,kBAAkB;AACxD,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA,CAACF,cAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBR,OAAA;MAAMS,SAAS,EAAC,uCAAuC;MAAAL,QAAA,eACrDJ,OAAA,CAACJ,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACP,CAAC;AAEP;AAACE,EAAA,GA/BeP,UAAU;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}