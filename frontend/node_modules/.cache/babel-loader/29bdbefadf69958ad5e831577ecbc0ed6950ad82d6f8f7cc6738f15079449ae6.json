{"ast":null,"code":"var _jsxFileName = \"/home/nagesh/Desktop/RR6.4/12-adv-starting-project/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport async function eventDetailLoader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw {\n      success: false,\n      data: {},\n      message: \"Could NOT fetch events.\"\n    };\n  } else {\n    return {\n      success: true,\n      data: await response.json(),\n      message: \"Events are fetched.\"\n    };\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","useParams","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","eventDetailLoader","request","params","id","eventId","response","fetch","ok","success","message","json","$RefreshReg$"],"sources":["/home/nagesh/Desktop/RR6.4/12-adv-starting-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useLoaderData, useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nexport function EventDetailPage() {\n  const data = useLoaderData();\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  );\n}\n\nexport async function eventDetailLoader({ request, params }) {\n  const id = params.eventId;\n\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw {\n      success: false,\n      data: {},\n      message: \"Could NOT fetch events.\",\n    };\n  } else {\n    return {\n      success: true,\n      data: await response.json(),\n      message: \"Events are fetched.\",\n    };\n  }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5B,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP;AAACP,EAAA,CAPeD,eAAe;EAAA,QAChBP,aAAa;AAAA;AAAAgB,EAAA,GADZT,eAAe;AAS/B,OAAO,eAAeU,iBAAiBA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAC3D,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM;MACJC,OAAO,EAAE,KAAK;MACdhB,IAAI,EAAE,CAAC,CAAC;MACRiB,OAAO,EAAE;IACX,CAAC;EACH,CAAC,MAAM;IACL,OAAO;MACLD,OAAO,EAAE,IAAI;MACbhB,IAAI,EAAE,MAAMa,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC3BD,OAAO,EAAE;IACX,CAAC;EACH;AACF;AAAC,IAAAV,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}