{"ast":null,"code":"var _jsxFileName = \"/home/nagesh/Desktop/RR6.4/12-adv-starting-project/frontend/src/pages/NewEventPage.js\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const formData = await request.formData();\n  const eventData = {\n    title: formData.get(\"title\"),\n    image: formData.get(\"image\"),\n    date: formData.get(\"date\"),\n    description: formData.get(\"description\")\n  };\n  const response = fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw {\n      success: false,\n      data: {},\n      message: \"Could NOT fetch events.\"\n    };\n  } else {\n    return {\n      success: true,\n      data: await response.json(),\n      message: \"Events are fetched.\"\n    };\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","success","data","message","json","$RefreshReg$"],"sources":["/home/nagesh/Desktop/RR6.4/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\n\nexport function NewEventPage() {\n  return <EventForm />;\n}\n\nexport async function action({ request, params }) {\n  const formData = await request.formData();\n\n  const eventData = {\n    title: formData.get(\"title\"),\n    image: formData.get(\"image\"),\n    date: formData.get(\"date\"),\n    description: formData.get(\"description\"),\n  };\n  const response = fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(eventData),\n  });\n\n  if (!response.ok) {\n    throw {\n      success: false,\n      data: {},\n      message: \"Could NOT fetch events.\",\n    };\n  } else {\n    return {\n      success: true,\n      data: await response.json(),\n      message: \"Events are fetched.\",\n    };\n  }\n}\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC7B,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB;AAACC,EAAA,GAFeL,YAAY;AAI5B,OAAO,eAAeM,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACE,QAAQ,CAAC,CAAC;EAEzC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEF,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC;IAC5BC,KAAK,EAAEJ,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC;IAC5BE,IAAI,EAAEL,QAAQ,CAACG,GAAG,CAAC,MAAM,CAAC;IAC1BG,WAAW,EAAEN,QAAQ,CAACG,GAAG,CAAC,aAAa;EACzC,CAAC;EACD,MAAMI,QAAQ,GAAGC,KAAK,CAAC,8BAA8B,EAAE;IACrDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM;MACJC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,CAAC,CAAC;MACRC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,MAAM;IACL,OAAO;MACLF,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE,MAAMT,QAAQ,CAACW,IAAI,CAAC,CAAC;MAC3BD,OAAO,EAAE;IACX,CAAC;EACH;AACF;AAAC,IAAArB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}