{"ast":null,"code":"var _jsxFileName = \"D:\\\\web Dev\\\\REACT 2024\\\\15 React_Router_v6\\\\frontend\\\\src\\\\pages\\\\Error.js\";\nimport { ErrorBoundary } from \"react-router-dom\";\nimport PageContent from \"../components/PageContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Error() {\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    fallbackRender: async ({\n      error\n    }) => {\n      // Note the async keyword here\n      let title = 'An error occurred!';\n      let message = 'Something went wrong!';\n      if (error.status === 500) {\n        const errorMessage = await error.text();\n        const {\n          message: parsedMessage\n        } = JSON.parse(errorMessage);\n        message = parsedMessage;\n      }\n      if (error.status === 404) {\n        title = 'Not Found!';\n        message = 'Could not find resource or page.';\n      }\n      return /*#__PURE__*/_jsxDEV(PageContent, {\n        title: title,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Error;\nvar _c;\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"names":["ErrorBoundary","PageContent","jsxDEV","_jsxDEV","Error","fallbackRender","error","title","message","status","errorMessage","text","parsedMessage","JSON","parse","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web Dev/REACT 2024/15 React_Router_v6/frontend/src/pages/Error.js"],"sourcesContent":["import { ErrorBoundary } from \"react-router-dom\";\r\nimport PageContent from \"../components/PageContent\";\r\n\r\nexport function Error() {\r\n  return (\r\n    <ErrorBoundary fallbackRender={async ({ error }) => { // Note the async keyword here\r\n      let title = 'An error occurred!';\r\n      let message = 'Something went wrong!';\r\n\r\n      if (error.status === 500) {\r\n        const errorMessage = await error.text();\r\n        const { message: parsedMessage } = JSON.parse(errorMessage);\r\n        message = parsedMessage;\r\n      }\r\n\r\n      if (error.status === 404) {\r\n        title = 'Not Found!';\r\n        message = 'Could not find resource or page.';\r\n      }\r\n\r\n      return (\r\n        <PageContent title={title}>\r\n          <p className=\"text-xl\">{message}</p>\r\n        </PageContent>\r\n      );\r\n    }}>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,SAASC,KAAKA,CAAA,EAAG;EACtB,oBACED,OAAA,CAACH,aAAa;IAACK,cAAc,EAAE,MAAAA,CAAO;MAAEC;IAAM,CAAC,KAAK;MAAE;MACpD,IAAIC,KAAK,GAAG,oBAAoB;MAChC,IAAIC,OAAO,GAAG,uBAAuB;MAErC,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;QACxB,MAAMC,YAAY,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,CAAC;QACvC,MAAM;UAAEH,OAAO,EAAEI;QAAc,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC;QAC3DF,OAAO,GAAGI,aAAa;MACzB;MAEA,IAAIN,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;QACxBF,KAAK,GAAG,YAAY;QACpBC,OAAO,GAAG,kCAAkC;MAC9C;MAEA,oBACEL,OAAA,CAACF,WAAW;QAACM,KAAK,EAAEA,KAAM;QAAAQ,QAAA,eACxBZ,OAAA;UAAGa,SAAS,EAAC,SAAS;UAAAD,QAAA,EAAEP;QAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAElB;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEpB;AAACC,EAAA,GAzBejB,KAAK;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}